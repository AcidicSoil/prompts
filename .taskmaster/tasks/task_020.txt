# Task ID: 20
# Title: Align export_task_list with Task Master backlog
# Status: pending
# Dependencies: 8
# Priority: high
# Description: Update the workflow MCP tool so it reads Task Master AI's tasks.json output, preserving dependencies, statuses, and subtask hierarchy for external agents.
# Details:
Refactor `workflow/export_task_list` to parse `.taskmaster/tasks/tasks.json` using the existing Zod infrastructure. The tool should flatten subtasks into parent/child arrays, propagate Task Master status values, and include metadata tying each result back to the originating task ID. Update integration tests to cover Task Master sourced data and document the new behaviour in the MCP integration brief.

# Test Strategy:
Add unit coverage for the new parser and extend `test/integration/tools.test.ts` to assert Task Master sourced results. Run `npm run test:tools` and `npm run test:state` to confirm no regressions.

# Subtasks:
## 1. Implement Task Master tasks parser [pending]
### Dependencies: None
### Description: Create a loader that reads `.taskmaster/tasks/tasks.json`, validates structure with Zod, and returns normalized tasks including subtasks and dependencies.
### Details:
Prefer a pure function that accepts a JSON object so tests can inject fixtures. Match Task Master status strings exactly (e.g., pending, in-progress, done).

## 2. Wire parser into workflow/export_task_list [pending]
### Dependencies: 20.1
### Description: Replace the prompts metadata source with the new Task Master parser, ensuring structured results include parent-child relationships and status propagation.
### Details:
Return payload should include `source: 'task-master'` and maintain the schema expected by existing clients (id, title, dependsOn, status).

## 3. Document behaviour and update automation [pending]
### Dependencies: 20.2
### Description: Refresh MCP documentation (integration brief, README) and ensure `workflow/refresh_metadata` guidance covers Task Master sourced tasks.
### Details:
Note any manual fallback commands and confirm DocFetchReport call-outs where applicable.

