{
  "generatedAt": "2025-09-19T20:38:57.556Z",
  "entries": [
    {
      "slug": "api-contract",
      "path": "api-contract.md",
      "title": "API Contract",
      "command": "/api-contract",
      "trigger": "`/api-contract \"<feature or domain>\"`",
      "purpose": "Author an initial OpenAPI 3.1 or GraphQL SDL contract from requirements.",
      "phases": [
        "P2 App Scaffold & Contracts"
      ],
      "gate": "Test Gate lite",
      "status": "contract checked into repo with sample generation running cleanly.",
      "previous": [
        "/scaffold-fullstack"
      ],
      "next": [
        "/openapi-generate",
        "/modular-architecture"
      ]
    },
    {
      "slug": "api-docs-local",
      "path": "api-docs-local.md",
      "title": "API Docs Local",
      "command": "/api-docs-local",
      "trigger": "/api-docs-local",
      "purpose": "Fetch API docs and store locally for offline, deterministic reference.",
      "phases": [
        "P2 App Scaffold & Contracts"
      ],
      "gate": "Test Gate lite",
      "status": "contracts cached locally for repeatable generation.",
      "previous": [
        "/scaffold-fullstack"
      ],
      "next": [
        "/api-contract",
        "/openapi-generate"
      ]
    },
    {
      "slug": "audit",
      "path": "audit.md",
      "title": "Audit",
      "command": "/audit",
      "trigger": "/audit",
      "purpose": "Audit repository hygiene and suggest improvements.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Release Gate",
      "status": "readiness criteria before shipping.",
      "previous": [
        "/logging-strategy"
      ],
      "next": [
        "/error-analysis",
        "/fix"
      ]
    },
    {
      "slug": "auth-scaffold",
      "path": "auth-scaffold.md",
      "title": "Auth Scaffold",
      "command": "/auth-scaffold",
      "trigger": "`/auth-scaffold <oauth|email|oidc>`",
      "purpose": "Scaffold auth flows, routes, storage, and a basic threat model.",
      "phases": [
        "P3 Data & Auth"
      ],
      "gate": "Migration dry-run",
      "status": "auth flows threat-modeled and test accounts wired.",
      "previous": [
        "/migration-plan"
      ],
      "next": [
        "/modular-architecture",
        "/ui-screenshots",
        "/e2e-runner-setup"
      ]
    },
    {
      "slug": "cleanup-branches",
      "path": "cleanup-branches.md",
      "title": "Cleanup Branches",
      "command": "/cleanup-branches",
      "trigger": "/cleanup-branches",
      "purpose": "Suggest safe local branch cleanup (merged/stale).",
      "phases": [
        "P8 Post-release Hardening"
      ],
      "gate": "Post-release cleanup",
      "status": "repo tidy with stale branches archived.",
      "previous": [
        "/dead-code-scan"
      ],
      "next": [
        "/feature-flags",
        "/model-strengths"
      ]
    },
    {
      "slug": "commit",
      "path": "commit.md",
      "title": "Commit Message Assistant",
      "command": "/commit",
      "trigger": "commit",
      "purpose": "Generate a conventional, review-ready commit message from the currently staged changes.",
      "phases": [
        "P6 CI/CD & Env"
      ],
      "gate": "Review Gate",
      "status": "clean diff, CI green, and approvals ready.",
      "previous": [
        "/version-control-guide"
      ],
      "next": [
        "/devops-automation",
        "/env-setup"
      ]
    },
    {
      "slug": "compare-outputs",
      "path": "compare-outputs.md",
      "title": "Compare Outputs",
      "command": "/compare-outputs",
      "trigger": "/compare-outputs",
      "purpose": "Run multiple models or tools on the same prompt and summarize best output.",
      "phases": [
        "P9 Model Tactics"
      ],
      "gate": "Model uplift",
      "status": "comparative data compiled before switching defaults.",
      "previous": [
        "/model-evaluation"
      ],
      "next": [
        "/switch-model"
      ]
    },
    {
      "slug": "content-generation",
      "path": "content-generation.md",
      "title": "Content Generation",
      "command": "/content-generation",
      "trigger": "/content-generation",
      "purpose": "Draft docs, blog posts, or marketing copy aligned with the codebase.",
      "phases": [
        "11) Evidence Log"
      ],
      "gate": "Evidence Log",
      "status": "Ensure docs stay synced with current phase deliverables.",
      "previous": [
        "Stage-specific work just completed"
      ],
      "next": [
        "/release-notes",
        "/summary (if sharing updates)"
      ]
    },
    {
      "slug": "coverage-guide",
      "path": "coverage-guide.md",
      "title": "Coverage Guide",
      "command": "/coverage-guide",
      "trigger": "/coverage-guide",
      "purpose": "Suggest a plan to raise coverage based on uncovered areas.",
      "phases": [
        "P5 Quality Gates & Tests"
      ],
      "gate": "Test Gate",
      "status": "coverage targets and regression guard plan recorded.",
      "previous": [
        "/integration-test"
      ],
      "next": [
        "/regression-guard",
        "/version-control-guide"
      ]
    },
    {
      "slug": "db-bootstrap",
      "path": "db-bootstrap.md",
      "title": "DB Bootstrap",
      "command": "/db-bootstrap",
      "trigger": "`/db-bootstrap <postgres|mysql|sqlite|mongodb>`",
      "purpose": "Pick a database, initialize migrations, local compose, and seed scripts.",
      "phases": [
        "P3 Data & Auth"
      ],
      "gate": "Migration dry-run",
      "status": "migrations apply/rollback cleanly with seeds populated.",
      "previous": [
        "/modular-architecture"
      ],
      "next": [
        "/migration-plan",
        "/auth-scaffold"
      ]
    },
    {
      "slug": "dead-code-scan",
      "path": "dead-code-scan.md",
      "title": "Dead Code Scan",
      "command": "/dead-code-scan",
      "trigger": "/dead-code-scan",
      "purpose": "List likely dead or unused files and exports (static signals).",
      "phases": [
        "P8 Post-release Hardening"
      ],
      "gate": "Post-release cleanup",
      "status": "ensure code removals keep prod stable.",
      "previous": [
        "/file-modularity"
      ],
      "next": [
        "/cleanup-branches",
        "/feature-flags"
      ]
    },
    {
      "slug": "design-assets",
      "path": "design-assets.md",
      "title": "Design Assets",
      "command": "/design-assets",
      "trigger": "/design-assets",
      "purpose": "Generate favicons and small design snippets from product brand.",
      "phases": [
        "P4 Frontend UX"
      ],
      "gate": "Accessibility checks queued",
      "status": "ensure assets support design review.",
      "previous": [
        "/modular-architecture"
      ],
      "next": [
        "/ui-screenshots",
        "/logging-strategy"
      ]
    },
    {
      "slug": "devops-automation",
      "path": "devops-automation.md",
      "title": "DevOps Automation",
      "command": "/devops-automation",
      "trigger": "/devops-automation",
      "purpose": "Configure servers, DNS, SSL, CI/CD at a pragmatic level.",
      "phases": [
        "P6 CI/CD & Env"
      ],
      "gate": "Review Gate",
      "status": "CI pipeline codified, rollback steps rehearsed.",
      "previous": [
        "/version-control-guide"
      ],
      "next": [
        "/env-setup",
        "/secrets-manager-setup",
        "/iac-bootstrap"
      ]
    },
    {
      "slug": "e2e-runner-setup",
      "path": "e2e-runner-setup.md",
      "title": "E2E Runner Setup",
      "command": "/e2e-runner-setup",
      "trigger": "`/e2e-runner-setup <playwright|cypress>`",
      "purpose": "Configure an end‑to‑end test runner with fixtures and data sandbox.",
      "phases": [
        "P5 Quality Gates & Tests"
      ],
      "gate": "Test Gate",
      "status": "runner green locally and wired into CI before expanding coverage.",
      "previous": [
        "/auth-scaffold",
        "/ui-screenshots"
      ],
      "next": [
        "/integration-test",
        "/coverage-guide"
      ]
    },
    {
      "slug": "env-setup",
      "path": "env-setup.md",
      "title": "Env Setup",
      "command": "/env-setup",
      "trigger": "`/env-setup`",
      "purpose": "Create `.env.example`, runtime schema validation, and per‑env overrides.",
      "phases": [
        "P6 CI/CD & Env"
      ],
      "gate": "Review Gate",
      "status": "environment schemas enforced and CI respects strict loading.",
      "previous": [
        "/devops-automation"
      ],
      "next": [
        "/secrets-manager-setup",
        "/iac-bootstrap"
      ]
    },
    {
      "slug": "error-analysis",
      "path": "error-analysis.md",
      "title": "Error Analysis",
      "command": "/error-analysis",
      "trigger": "/error-analysis",
      "purpose": "Analyze error logs and enumerate likely root causes with fixes.",
      "phases": [
        "P8 Post-release Hardening"
      ],
      "gate": "Post-release cleanup",
      "status": "Sev-1 incidents triaged with fixes scheduled.",
      "previous": [
        "/logging-strategy",
        "/audit"
      ],
      "next": [
        "/fix",
        "/refactor-suggestions"
      ]
    },
    {
      "slug": "explain-code",
      "path": "explain-code.md",
      "title": "Explain Code",
      "command": "/explain-code",
      "trigger": "/explain-code",
      "purpose": "Provide line-by-line explanations for a given file or diff.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Review Gate",
      "status": "Improve reviewer comprehension before approvals.",
      "previous": [
        "/owners",
        "/review"
      ],
      "next": [
        "/review-branch",
        "/pr-desc"
      ]
    },
    {
      "slug": "feature-flags",
      "path": "feature-flags.md",
      "title": "Feature Flags",
      "command": "/feature-flags",
      "trigger": "`/feature-flags <provider>`",
      "purpose": "Integrate a flag provider, wire SDK, and enforce guardrails.",
      "phases": [
        "P8 Post-release Hardening"
      ],
      "gate": "Post-release cleanup",
      "status": "guardrails added before toggling new flows.",
      "previous": [
        "/cleanup-branches"
      ],
      "next": [
        "/model-strengths",
        "/model-evaluation"
      ]
    },
    {
      "slug": "file-modularity",
      "path": "file-modularity.md",
      "title": "File Modularity",
      "command": "/file-modularity",
      "trigger": "/file-modularity",
      "purpose": "Enforce smaller files and propose safe splits for giant files.",
      "phases": [
        "P8 Post-release Hardening"
      ],
      "gate": "Post-release cleanup",
      "status": "structure debt addressed without destabilizing prod.",
      "previous": [
        "/refactor-suggestions"
      ],
      "next": [
        "/dead-code-scan",
        "/cleanup-branches"
      ]
    },
    {
      "slug": "fix",
      "path": "fix.md",
      "title": "Fix",
      "command": "/fix",
      "trigger": "/fix",
      "purpose": "Propose a minimal, correct fix with patch hunks.",
      "phases": [
        "P8 Post-release Hardening"
      ],
      "gate": "Post-release cleanup",
      "status": "validated fix with regression coverage before closing incident.",
      "previous": [
        "/error-analysis"
      ],
      "next": [
        "/refactor-suggestions",
        "/file-modularity"
      ]
    },
    {
      "slug": "generate",
      "path": "generate.md",
      "title": "Generate",
      "command": "/generate",
      "trigger": "/generate",
      "purpose": "Generate unit tests for a given source file.",
      "phases": [
        "P5 Quality Gates & Tests"
      ],
      "gate": "Test Gate",
      "status": "targeted unit tests authored for the specified module.",
      "previous": [
        "/coverage-guide"
      ],
      "next": [
        "/regression-guard"
      ]
    },
    {
      "slug": "iac-bootstrap",
      "path": "iac-bootstrap.md",
      "title": "IaC Bootstrap",
      "command": "/iac-bootstrap",
      "trigger": "`/iac-bootstrap <aws|gcp|azure|fly|render>`",
      "purpose": "Create minimal Infrastructure‑as‑Code for chosen platform plus CI pipeline hooks.",
      "phases": [
        "P6 CI/CD & Env"
      ],
      "gate": "Review Gate",
      "status": "IaC applied in staging with drift detection configured.",
      "previous": [
        "/secrets-manager-setup"
      ],
      "next": [
        "/owners",
        "/review"
      ]
    },
    {
      "slug": "instruction-file",
      "path": "instruction-file.md",
      "title": "Instruction File",
      "command": "/instruction-file",
      "trigger": "/instruction-file",
      "purpose": "Generate or update `cursor.rules`, `windsurf.rules`, or `claude.md` with project-specific instructions.",
      "phases": [
        "P0 Preflight Docs"
      ],
      "gate": "DocFetchReport",
      "status": "capture approved instructions before proceeding.",
      "previous": [
        "Preflight discovery (AGENTS baseline)"
      ],
      "next": [
        "/planning-process",
        "/scope-control"
      ]
    },
    {
      "slug": "integration-test",
      "path": "integration-test.md",
      "title": "Integration Test",
      "command": "/integration-test",
      "trigger": "/integration-test",
      "purpose": "Generate E2E tests that simulate real user flows.",
      "phases": [
        "P5 Quality Gates & Tests"
      ],
      "gate": "Test Gate",
      "status": "happy path E2E must pass locally and in CI.",
      "previous": [
        "/e2e-runner-setup"
      ],
      "next": [
        "/coverage-guide",
        "/regression-guard"
      ]
    },
    {
      "slug": "migration-plan",
      "path": "migration-plan.md",
      "title": "Migration Plan",
      "command": "/migration-plan",
      "trigger": "`/migration-plan \"<change summary>\"`",
      "purpose": "Produce safe up/down migration steps with checks and rollback notes.",
      "phases": [
        "P3 Data & Auth"
      ],
      "gate": "Migration dry-run",
      "status": "validated rollback steps and safety checks documented.",
      "previous": [
        "/db-bootstrap"
      ],
      "next": [
        "/auth-scaffold",
        "/e2e-runner-setup"
      ]
    },
    {
      "slug": "model-evaluation",
      "path": "model-evaluation.md",
      "title": "Model Evaluation",
      "command": "/model-evaluation",
      "trigger": "/model-evaluation",
      "purpose": "Try a new model and compare outputs against a baseline.",
      "phases": [
        "P9 Model Tactics"
      ],
      "gate": "Model uplift",
      "status": "experiments must beat baseline quality metrics.",
      "previous": [
        "/model-strengths"
      ],
      "next": [
        "/compare-outputs",
        "/switch-model"
      ]
    },
    {
      "slug": "model-strengths",
      "path": "model-strengths.md",
      "title": "Model Strengths",
      "command": "/model-strengths",
      "trigger": "/model-strengths",
      "purpose": "Choose model per task type.",
      "phases": [
        "P9 Model Tactics"
      ],
      "gate": "Model uplift",
      "status": "capture baseline routing before experimentation.",
      "previous": [
        "/feature-flags (optional)",
        "Stage-specific blockers"
      ],
      "next": [
        "/model-evaluation",
        "/compare-outputs"
      ]
    },
    {
      "slug": "monitoring-setup",
      "path": "monitoring-setup.md",
      "title": "Monitoring Setup",
      "command": "/monitoring-setup",
      "trigger": "`/monitoring-setup`",
      "purpose": "Bootstrap logs, metrics, and traces with dashboards per domain.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Release Gate",
      "status": "observability baselines ready before rollout.",
      "previous": [
        "/version-proposal"
      ],
      "next": [
        "/slo-setup",
        "/logging-strategy"
      ]
    },
    {
      "slug": "openapi-generate",
      "path": "openapi-generate.md",
      "title": "OpenAPI Generate",
      "command": "/openapi-generate",
      "trigger": "`/openapi-generate <server|client> <lang> <spec-path>`",
      "purpose": "Generate server stubs or typed clients from an OpenAPI spec.",
      "phases": [
        "P2 App Scaffold & Contracts"
      ],
      "gate": "Test Gate lite",
      "status": "generated code builds and CI checks cover the new scripts.",
      "previous": [
        "/api-contract"
      ],
      "next": [
        "/modular-architecture",
        "/db-bootstrap"
      ]
    },
    {
      "slug": "owners",
      "path": "owners.md",
      "title": "Owners",
      "command": "/owners",
      "trigger": "/owners",
      "purpose": "Suggest likely owners/reviewers for a path.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Review Gate",
      "status": "confirm approvers and escalation paths before PR submission.",
      "previous": [
        "/iac-bootstrap"
      ],
      "next": [
        "/review",
        "/review-branch",
        "/pr-desc"
      ]
    },
    {
      "slug": "planning-process",
      "path": "planning-process.md",
      "title": "Planning Process",
      "command": "/planning-process",
      "trigger": "/planning-process",
      "purpose": "Draft, refine, and execute a feature plan with strict scope control and progress tracking.",
      "phases": [
        "P1 Plan & Scope"
      ],
      "gate": "Scope Gate",
      "status": "confirm problem, users, Done criteria, and stack risks are logged.",
      "previous": [
        "Preflight Docs (AGENTS baseline)"
      ],
      "next": [
        "/scope-control",
        "/stack-evaluation"
      ]
    },
    {
      "slug": "pr-desc",
      "path": "pr-desc.md",
      "title": "Pr Desc",
      "command": "/pr-desc",
      "trigger": "/pr-desc",
      "purpose": "Draft a PR description from the branch diff.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Review Gate",
      "status": "PR narrative ready for approvals and release prep.",
      "previous": [
        "/review-branch"
      ],
      "next": [
        "/release-notes",
        "/version-proposal"
      ]
    },
    {
      "slug": "prototype-feature",
      "path": "prototype-feature.md",
      "title": "Prototype Feature",
      "command": "/prototype-feature",
      "trigger": "/prototype-feature",
      "purpose": "Spin up a standalone prototype in a clean repo before merging into main.",
      "phases": [
        "P1 Plan & Scope",
        "P2 App Scaffold & Contracts"
      ],
      "gate": "Prototype review",
      "status": "Validate spike outcomes before committing to scope.",
      "previous": [
        "/planning-process"
      ],
      "next": [
        "/scaffold-fullstack",
        "/api-contract"
      ]
    },
    {
      "slug": "refactor-suggestions",
      "path": "refactor-suggestions.md",
      "title": "Refactor Suggestions",
      "command": "/refactor-suggestions",
      "trigger": "/refactor-suggestions",
      "purpose": "Propose repo-wide refactoring opportunities after tests exist.",
      "phases": [
        "P8 Post-release Hardening"
      ],
      "gate": "Post-release cleanup",
      "status": "plan high-leverage refactors once Sev-1 issues settle.",
      "previous": [
        "/fix"
      ],
      "next": [
        "/file-modularity",
        "/dead-code-scan"
      ]
    },
    {
      "slug": "reference-implementation",
      "path": "reference-implementation.md",
      "title": "Reference Implementation",
      "command": "/reference-implementation",
      "trigger": "/reference-implementation",
      "purpose": "Mimic the style and API of a known working example.",
      "phases": [
        "P2 App Scaffold & Contracts"
      ],
      "gate": "Test Gate lite",
      "status": "align new modules with proven patterns before deeper work.",
      "previous": [
        "/scaffold-fullstack",
        "/api-contract"
      ],
      "next": [
        "/modular-architecture",
        "/openapi-generate"
      ]
    },
    {
      "slug": "regression-guard",
      "path": "regression-guard.md",
      "title": "Regression Guard",
      "command": "/regression-guard",
      "trigger": "/regression-guard",
      "purpose": "Detect unrelated changes and add tests to prevent regressions.",
      "phases": [
        "P5 Quality Gates & Tests"
      ],
      "gate": "Test Gate",
      "status": "regression coverage in place before CI hand-off.",
      "previous": [
        "/coverage-guide"
      ],
      "next": [
        "/version-control-guide",
        "/devops-automation"
      ]
    },
    {
      "slug": "release-notes",
      "path": "release-notes.md",
      "title": "Release Notes",
      "command": "/release-notes",
      "trigger": "/release-notes",
      "purpose": "Generate human‑readable release notes from recent commits.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Release Gate",
      "status": "notes compiled for staging review and production rollout.",
      "previous": [
        "/pr-desc"
      ],
      "next": [
        "/version-proposal",
        "/monitoring-setup"
      ]
    },
    {
      "slug": "reset-strategy",
      "path": "reset-strategy.md",
      "title": "Reset Strategy",
      "command": "/reset-strategy",
      "trigger": "/reset-strategy",
      "purpose": "Decide when to hard reset and start clean to avoid layered bad diffs.",
      "phases": [
        "Reset Playbook"
      ],
      "gate": "Clean restart",
      "status": "triggered when gate criteria stall for >60 minutes.",
      "previous": [
        "Any blocked stage"
      ],
      "next": [
        "Restart with /planning-process then follow the gated flow"
      ]
    },
    {
      "slug": "review",
      "path": "review.md",
      "title": "Review",
      "command": "/review",
      "trigger": "/review",
      "purpose": "Review code matching a pattern and give actionable feedback.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Review Gate",
      "status": "peer review coverage met before merging.",
      "previous": [
        "/owners"
      ],
      "next": [
        "/review-branch",
        "/pr-desc"
      ]
    },
    {
      "slug": "review-branch",
      "path": "review-branch.md",
      "title": "Review Branch",
      "command": "/review-branch",
      "trigger": "/review-branch",
      "purpose": "Provide a high‑level review of the current branch vs origin/main.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Review Gate",
      "status": "branch scope validated before PR submission.",
      "previous": [
        "/review"
      ],
      "next": [
        "/pr-desc",
        "/release-notes"
      ]
    },
    {
      "slug": "scaffold-fullstack",
      "path": "scaffold-fullstack.md",
      "title": "Scaffold Full‑Stack App",
      "command": "/scaffold-fullstack",
      "trigger": "`/scaffold-fullstack <stack>`",
      "purpose": "Create a minimal, production‑ready monorepo template with app, API, tests, CI seeds, and infra stubs.",
      "phases": [
        "P2 App Scaffold & Contracts"
      ],
      "gate": "Test Gate lite",
      "status": "ensure lint/build scripts execute on the generated scaffold.",
      "previous": [
        "/stack-evaluation"
      ],
      "next": [
        "/api-contract",
        "/openapi-generate",
        "/modular-architecture"
      ]
    },
    {
      "slug": "scope-control",
      "path": "scope-control.md",
      "title": "Scope Control",
      "command": "/scope-control",
      "trigger": "/scope-control",
      "purpose": "Enforce explicit scope boundaries and maintain \"won't do\" and \"ideas for later\" lists.",
      "phases": [
        "P1 Plan & Scope"
      ],
      "gate": "Scope Gate",
      "status": "Done criteria, scope lists, and stack choices are committed.",
      "previous": [
        "/planning-process"
      ],
      "next": [
        "/stack-evaluation",
        "/scaffold-fullstack"
      ]
    },
    {
      "slug": "secrets-manager-setup",
      "path": "secrets-manager-setup.md",
      "title": "Secrets Manager Setup",
      "command": "/secrets-manager-setup",
      "trigger": "`/secrets-manager-setup <provider>`",
      "purpose": "Provision secret store and map app variables to it.",
      "phases": [
        "P6 CI/CD & Env"
      ],
      "gate": "Review Gate",
      "status": "secret paths mapped and least-privilege policies drafted.",
      "previous": [
        "/env-setup"
      ],
      "next": [
        "/iac-bootstrap",
        "/owners"
      ]
    },
    {
      "slug": "slo-setup",
      "path": "slo-setup.md",
      "title": "SLO Setup",
      "command": "/slo-setup",
      "trigger": "`/slo-setup`",
      "purpose": "Define Service Level Objectives, burn alerts, and runbooks.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Release Gate",
      "status": "SLOs and alerts reviewed before production rollout.",
      "previous": [
        "/monitoring-setup"
      ],
      "next": [
        "/logging-strategy",
        "/audit"
      ]
    },
    {
      "slug": "stack-evaluation",
      "path": "stack-evaluation.md",
      "title": "Stack Evaluation",
      "command": "/stack-evaluation",
      "trigger": "/stack-evaluation",
      "purpose": "Evaluate language/framework choices relative to AI familiarity and repo goals.",
      "phases": [
        "P1 Plan & Scope"
      ],
      "gate": "Scope Gate",
      "status": "record recommended stack and top risks before building.",
      "previous": [
        "/scope-control"
      ],
      "next": [
        "/scaffold-fullstack",
        "/api-contract"
      ]
    },
    {
      "slug": "switch-model",
      "path": "switch-model.md",
      "title": "Switch Model",
      "command": "/switch-model",
      "trigger": "/switch-model",
      "purpose": "Decide when to try a different AI backend and how to compare.",
      "phases": [
        "P9 Model Tactics"
      ],
      "gate": "Model uplift",
      "status": "document rollback/guardrails before flipping defaults.",
      "previous": [
        "/compare-outputs"
      ],
      "next": [
        "Return to the blocked stage (e.g., /integration-test) to apply learnings"
      ]
    },
    {
      "slug": "ui-screenshots",
      "path": "ui-screenshots.md",
      "title": "UI Screenshots",
      "command": "/ui-screenshots",
      "trigger": "/ui-screenshots",
      "purpose": "Analyze screenshots for UI bugs or inspiration and propose actionable UI changes.",
      "phases": [
        "P4 Frontend UX"
      ],
      "gate": "Accessibility checks queued",
      "status": "capture UX issues and backlog fixes.",
      "previous": [
        "/design-assets",
        "/modular-architecture"
      ],
      "next": [
        "/logging-strategy",
        "/e2e-runner-setup"
      ]
    },
    {
      "slug": "version-control-guide",
      "path": "version-control-guide.md",
      "title": "Version Control Guide",
      "command": "/version-control-guide",
      "trigger": "/version-control-guide",
      "purpose": "Enforce clean incremental commits and clean-room re-implementation when finalizing.",
      "phases": [
        "P6 CI/CD & Env"
      ],
      "gate": "Review Gate",
      "status": "clean diff, CI green, and approvals ready.",
      "previous": [
        "/regression-guard"
      ],
      "next": [
        "/devops-automation",
        "/env-setup"
      ]
    },
    {
      "slug": "version-proposal",
      "path": "version-proposal.md",
      "title": "Version Proposal",
      "command": "/version-proposal",
      "trigger": "/version-proposal",
      "purpose": "Propose next version (major/minor/patch) from commit history.",
      "phases": [
        "P7 Release & Ops"
      ],
      "gate": "Release Gate",
      "status": "version bump decision recorded before deployment.",
      "previous": [
        "/release-notes"
      ],
      "next": [
        "/monitoring-setup",
        "/slo-setup"
      ]
    },
    {
      "slug": "voice-input",
      "path": "voice-input.md",
      "title": "Voice Input",
      "command": "/voice-input",
      "trigger": "/voice-input",
      "purpose": "Support interaction from voice capture and convert to structured prompts.",
      "phases": [
        "Support"
      ],
      "gate": "Support intake",
      "status": "Clarify voice-derived requests before invoking gated prompts.",
      "previous": [
        "Voice transcript capture"
      ],
      "next": [
        "Any stage-specific command (e.g., /planning-process)"
      ]
    }
  ]
}
